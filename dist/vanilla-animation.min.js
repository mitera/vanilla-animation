"use strict";class VanillaAnimation{constructor(t){this.offsetItems=[];let e={boxClass:"vanimation",animatePrefix:"animate__",animateClass:"animate__animated",offset:0,mobile:!0,live:!0,scrollContainer:null};this.settings=Object.assign(Object.assign({},e),t);let n=!this.settings.mobile&&this.isMobile(navigator.userAgent);if(this.container=document.body,this.settings.scrollContainer){const i=document.querySelector(this.settings.scrollContainer);i&&(this.container=i)}if(this.items=Array.from(this.container.querySelectorAll("."+this.settings.boxClass)),!n){const i=this.resetItems.bind(this);if(document.readyState!=="loading"?this.resetItems():document.addEventListener("DOMContentLoaded",i,{once:!0}),"IntersectionObserver"in window){let s=this.intertsectionObserve();this.items.forEach(function(o){s.observe(o)})}this.settings.live&&this.observeItemMutation(),this.initScrollEvent()}}initScrollEvent(){let t=this;window.addEventListener("scroll",function(){t.offsetItems.forEach(function(e){let n=e.dataset.vanimationOffset?parseInt(e.dataset.vanimationOffset):t.settings.offset;if(e.dataset.vanimationScrolly&&parseInt(e.dataset.vanimationScrolly)+n<window.scrollY){e.removeAttribute("data-vanimation-scrolly"),t.doAnimation(e);const i=t.offsetItems.indexOf(e);i>-1&&t.offsetItems.splice(i,1)}})})}resetItems(){let t=this;this.items.forEach(function(e){t.resetItem(e)})}resetItem(t){t.style.visibility="hidden";let e=window.getComputedStyle(t).getPropertyValue("animation-name");e&&e!="none"&&(t.classList.remove(this.settings.animatePrefix+e),t.dataset.vanimation=this.settings.animatePrefix+e)}intertsectionObserve(){let t=this;return new IntersectionObserver(function(n){n.forEach(function(i){if(i.isIntersecting){let s=i.target;s.classList.contains(t.settings.animateClass)||(t.isVisible(s)?t.doAnimation(s):(s.dataset.vanimationScrolly=window.scrollY+"",t.offsetItems.push(s)))}})})}doAnimation(t){let e=t.dataset.vanimation?t.dataset.vanimation:"none";t.classList.add(e),t.classList.add(this.settings.animateClass),t.style.visibility="visible"}observeItemMutation(){new MutationObserver(e=>{for(let n of e)for(let i of n.addedNodes)i instanceof HTMLElement&&i.classList.contains(this.settings.boxClass)&&(this.resetItem(i),"IntersectionObserver"in window&&this.intertsectionObserve().observe(i))}).observe(this.container,{childList:!0,subtree:!0})}isMobile(t){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(t)}isVisible(t){const e=t.dataset.vanimationOffset?parseInt(t.dataset.vanimationOffset):this.settings.offset,n=this.container.scrollTop,i=n+Math.min(document.documentElement.clientHeight,window.innerHeight)-e,s=t.getBoundingClientRect().top,o=s+t.clientHeight;let a=s<=i&&o>=n;return s<0&&(a=!0),a}}
